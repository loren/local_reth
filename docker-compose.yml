version: '3.9'

services:
  reth:
    image: ghcr.io/paradigmxyz/reth
    pull_policy: always
    container_name: reth
    restart: unless-stopped
    stop_signal: SIGINT
    stop_grace_period: 2m
    volumes:
      - nodedata:$HOME/nodedata/
    command: >
      node
      --metrics reth:9001
      --datadir $HOME/nodedata/reth/
      --http
      --http.addr=0.0.0.0
      --http.api=eth,web3,trace,rpc
    ports:
      - '8545:8545'  # http rpc port
      - '9001:9001'  # metrics port
      - '8551:8551'  # engine api port

  lighthouse:
    image: sigp/lighthouse:latest
    pull_policy: always
    container_name: lighthouse
    restart: unless-stopped
    stop_signal: SIGINT
    stop_grace_period: 2m
    depends_on:
      - reth
    volumes:
      - nodedata:$HOME/nodedata/
    ports:
      - "9000:9000/udp"  # p2p port (udp)
      - "9000:9000/tcp"  # p2p port (tcp)
      - "5052:5052/tcp"  # http rpc port
      - "5054:5054/tcp"  # metrics port
    command: > 
      lighthouse
      beacon_node
      --network=mainnet
      --datadir=$HOME/nodedata/lighthouse/
      --http
      --http-address=0.0.0.0
      --checkpoint-sync-url=https://mainnet.checkpoint.sigp.io
      --metrics
      --metrics-address=0.0.0.0
      --execution-endpoint=http://reth:8551
      --execution-jwt=$HOME/nodedata/reth/jwt.hex
      --disable-upnp

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    user: root
    restart: unless-stopped
    stop_signal: SIGINT
    stop_grace_period: 2m
    depends_on:
      - reth
      - lighthouse
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheusdata:/prometheusdata
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheusdata'

  grafana:
    container_name: grafana
    image: grafana/grafana
    user: '472'
    restart: unless-stopped
    stop_signal: SIGINT
    stop_grace_period: 2m
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafanadata:/var/lib/grafanadata
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:  # disable login since we are running locally
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: "Admin"

volumes:
  nodedata:
    driver: local
  prometheusdata:
    driver: local
  grafanadata:
    driver: local
